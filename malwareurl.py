import requests
from bs4 import BeautifulSoup

with open("apikey.txt","r") as f: apikey=f.read()

def jsonify_URL(url:str):
    entry={"url":""}
    entry["url"]=url
    return entry

def wykryj_malware(url:str,apikey:str):
    api_url=f"https://safebrowsing.googleapis.com/v4/threatMatches:find?key={apikey}"

    # bieda edition opcje menu
    sprawdz_linki = True
    sprawdz_url_skryptow = True
    debug_drukuj_znalezione = False

    urls_scripts = []
    urls_links = []

    json_links=[]

    # Pobierz kod źródłowy strony
    print("Pobieranie strony...")
    r = requests.get(url)
    source = r.text

    # Przetwórz pobrany kod strony
    print("Przetwarzanie HTML")
    soup = BeautifulSoup(source, "html.parser")

    if sprawdz_url_skryptow:
        print("Filtrowanie URL skryptów")
        scripts = soup.find_all("script",src=True)
        for i in scripts: 
            match=i["src"]
            if "https" not in match and url[6:] in match: match="https:"+match
            elif url not in match: match=url+match
            if match not in urls_scripts: urls_scripts.append(match)
        for i in urls_scripts:
            json_links.append(jsonify_URL(i))

    if sprawdz_linki:
        print("Filtrowanie URL odnośników")
        links = soup.find_all("a", href=True)
        for i in links:
            match=i["href"]
            if "https" not in match and url[6:] in match: match="https:"+match
            elif url not in match: match=url+match
            if match not in urls_links: urls_links.append(match)
        for i in urls_links:
            json_links.append(jsonify_URL(i))

    print(f"Znaleziono:\n{len(urls_scripts)}\tURL skryptów\n{len(urls_links)}\tURL hiperłączy")

    if debug_drukuj_znalezione:
        for i in json_links: print(i)
        for i in urls_links: print(i)

    request_body={
        "client": {
            "clientId":         "jkedziora",
            "clientVersion":    "1.0.0"
        },
        "threatInfo": {
            "threatTypes":      ["THREAT_TYPE_UNSPECIFIED","MALWARE","SOCIAL_ENGINEERING","UNWANTED_SOFTWARE","POTENTIALLY_HARMFUL_APPLICATION"],
            "platformTypes":    ["ANY_PLATFORM"],
            "threatEntryTypes": ["URL"],
            "threatEntries": []
        }
    }

    for i in json_links:
        request_body["threatInfo"]["threatEntries"]=json_links

    if True:
        r = requests.post(url=api_url,json=request_body)
        print(r.json())

wykryj_malware("https://testsafebrowsing.appspot.com/",apikey=apikey)